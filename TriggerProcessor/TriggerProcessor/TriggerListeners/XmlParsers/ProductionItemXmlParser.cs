using System;
using System.Xml.Linq;

namespace TriggerProcessor.TriggerListeners.XmlParsers
{
    /// <summary>
    /// Parses the XML generated by a SQL Server trigger into the specified row type.
    /// </summary>
    public class ProductionItemXmlParser : TriggerXmlParser<ProductionItemRow>
    {
        protected override string GetKey(ProductionItemRow row) => row.ProductionItemID.ToString();

        protected override ProductionItemRow ParseRow(XElement row)
        {
            return new ProductionItemRow
            {
                // Can't use XmlSerializer because of all the nullable properties, unfortunately

                BatchJobSlotId = row.Attribute("BatchJobSlotId").ParseGuid(),
                BinID = row.Attribute("BinID").ParseGuid(),
                BoxID = row.Attribute("BoxID").ParseInt(),
                CancelDate = row.Attribute("CancelDate").ParseDate(),
                ClaimID = row.Attribute("ClaimID").ParseGuid(),
                CreatedDate = row.Attribute("CreatedDate").ParseDate().GetValueOrDefault(),
                ExpeditedHours = row.Attribute("ExpeditedHours").ParseInt().GetValueOrDefault(),
                IsActive = row.Attribute("IsActive").ParseInt().GetValueOrDefault() == 1,
                IsDead = row.Attribute("IsDead").ParseInt().GetValueOrDefault() == 1,
                IsOnHold = row.Attribute("IsOnHold").ParseInt().GetValueOrDefault() == 1,
                JigSlotID = row.Attribute("JigSlotID").ParseGuid(),
                MaterialID = row.Attribute("MaterialID").ParseInt(),
                OnHoldDate = row.Attribute("OnHoldDate").ParseDate(),
                OrderItemID = row.Attribute("OrderItemID").ParseInt().GetValueOrDefault(),
                OrderItemMetaDataParentId = row.Attribute("OrderItemMetaDataParentId").ParseInt().GetValueOrDefault(),
                ParentProductionItemID = row.Attribute("ParentProductionItemID").ParseInt(),
                PrinterID = row.Attribute("PrinterID").ParseGuid(),
                ProductID = row.Attribute("ProductID").ParseInt(),
                ProductionItemID = row.Attribute("ProductionItemID").ParseInt().GetValueOrDefault(),
                ProductionItemStepId = row.Attribute("ProductionItemStepId").ParseByte().GetValueOrDefault(),
                ProductionItemTypeId = row.Attribute("ProductionItemTypeId").ParseByte().GetValueOrDefault(),
                QueueByDate = row.Attribute("QueueByDate").ParseDate(),
                ReprintCount = row.Attribute("ReprintCount").ParseByte().GetValueOrDefault(),
                SideATemplateCustomizationID = row.Attribute("SideATemplateCustomizationID").ParseInt(),
                SideBTemplateCustomizationID = row.Attribute("SideBTemplateCustomizationID").ParseInt(),
                SizeID = row.Attribute("SizeID").ParseInt(),
                StoreID = row.Attribute("StoreID").ParseInt(),
                VendorID = row.Attribute("VendorID").ParseGuid().GetValueOrDefault(),
                WasteDate = row.Attribute("WasteDate").ParseDate(),
                WasteId = row.Attribute("WasteId").ParseShort(),
                WasteReason = row.Attribute("WasteReason")?.Value,
            };
        }
    }

    public class ProductionItemRow
    {
        public int ProductionItemID { get; set; }
        public int OrderItemID { get; set; }
        public byte ProductionItemTypeId { get; set; }
        public byte ProductionItemStepId { get; set; }
        public Guid VendorID { get; set; }
        public byte ReprintCount { get; set; }
        public int ExpeditedHours { get; set; }
        public bool IsActive { get; set; }
        public bool IsDead { get; set; }
        public bool IsOnHold { get; set; }
        public DateTime CreatedDate { get; set; }
        public DateTime? OnHoldDate { get; set; }
        public DateTime? CancelDate { get; set; }
        public DateTime? WasteDate { get; set; }
        public DateTime? QueueByDate { get; set; }
        public int? SideATemplateCustomizationID { get; set; }
        public int? SideBTemplateCustomizationID { get; set; }
        public int? ProductID { get; set; }
        public int? StoreID { get; set; }
        public int? MaterialID { get; set; }
        public int? SizeID { get; set; }
        public int? ParentProductionItemID { get; set; }
        public int? BoxID { get; set; }
        public Guid? BinID { get; set; }
        public Guid? JigSlotID { get; set; }
        public Guid? PrinterID { get; set; }
        public Guid? BatchJobSlotId { get; set; }
        public short? WasteId { get; set; }
        public string WasteReason { get; set; }
        public int OrderItemMetaDataParentId { get; set; }
        public Guid? ClaimID { get; set; }
    }
}